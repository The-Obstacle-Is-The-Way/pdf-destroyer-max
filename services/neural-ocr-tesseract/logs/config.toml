[formatters]
# Standard formatter for general logs
[formatters.standard]
format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Detailed formatter for more in-depth logs, useful for debugging
[formatters.detailed]
format = "%(asctime)s - %(name)s - %(levelname)s - [%(filename)s:%(lineno)d] - %(message)s"

[handlers]
# Console handler to stream output to stdout
[handlers.console]
class = "logging.StreamHandler"
level = "INFO"
formatter = "standard"
stream = "ext://sys.stdout"

# File handler to log to rotating log files
[handlers.file]
class = "logging.handlers.RotatingFileHandler"
level = "INFO"
formatter = "detailed"
filename = "logs/ocr_service.log"
maxBytes = 10485760  # 10MB per log file
backupCount = 5  # Keep last 5 log files as backup
encoding = "utf8"

# Optional handler for error-level logs to a separate file
[handlers.error_file]
class = "logging.FileHandler"
level = "ERROR"
formatter = "detailed"
filename = "logs/ocr_service_errors.log"
encoding = "utf8"

[loggers]
# Root logger for general application-wide logging
[loggers.root]
level = "INFO"
handlers = ["console", "file"]

# Logger for OCR-Tesseract specific components
[loggers.ocr-tesseract]
level = "DEBUG"  # Set to DEBUG to capture detailed logs from OCR components
handlers = ["console", "file"]
propagate = false

# Logger for text extraction component with more in-depth debugging
[loggers.ocr-tesseract.extraction]
level = "DEBUG"
handlers = ["console", "file", "error_file"]
propagate = false

